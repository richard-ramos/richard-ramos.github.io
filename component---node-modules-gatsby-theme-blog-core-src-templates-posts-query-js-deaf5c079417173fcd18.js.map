{"version":3,"sources":["webpack:///./src/gatsby-theme-blog/components/home-footer.js","webpack:///./src/gatsby-theme-blog/components/posts.js","webpack:///./node_modules/gatsby-theme-blog-core/src/templates/posts-query.js","webpack:///./node_modules/gatsby-theme-blog/src/gatsby-theme-blog-core/components/posts.js"],"names":["socialLinks","email","className","css","listStyle","p","mt","as","to","textDecoration","fontSize","href","key","platform","url","target","rel","arr","location","posts","siteTitle","title","flex","node","keywords","mb","ml","minWidth","display","slug","query","PostsPage","data","site","allBlogPost","edges","siteMetadata","social"],"mappings":"4OA2EA,EAvEe,SAAC,GAAqB,IAAnBA,EAAkB,EAAlBA,YAaIC,EAZV,EAAV,KADkC,wBAiBlC,OACE,sBAAQC,UAAU,sBAChB,mBAAKA,UAAU,WACb,mBAAKA,UAAU,sBACb,mBAAKA,UAAU,cACb,kBACEA,UADF,eAEEC,IAAKA,YAAI,CAAEC,UAAF,OAAqBC,EAArB,EAA2BC,GAAI,KAExC,kBAAIJ,UAAU,UACZ,YAAC,IAAD,GACEA,UADF,aAEEK,GAFF,IAGEC,GAHF,cAIEL,IAAKA,YAAI,CAAEM,eAAF,OAA0BC,SAAU,MATnD,UAcE,sBACE,YAAC,IAAD,GACER,UADF,qBAEES,KAAM,UAFR,EAGEH,GAAG,eAJP,eASGR,EAAA,KAAgB,uBACf,wBAAUY,IAAKC,EAASC,KACtB,YAAC,IAAD,GACEH,KAAME,EADR,IAEEE,OAFF,SAGEC,IAHF,sBAIEb,IAAKA,YAAI,CAAEM,eAAgB,UAE1BI,EAPL,MASGI,gBACC,oCAXW,gBCDjC,EAxCc,SAAC,GAAD,IAAGC,EAAH,WAAaC,EAAb,QAAoBC,EAApB,YAA+BpB,EAA/B,qBACZ,iBAAQkB,SAAR,EAA4BG,MAAOD,GACjC,oBAAMjB,IAAKA,YAAI,CAACmB,KAAM,cACpB,kBAAIpB,UAAJ,YAA0BC,IAAKA,YAAI,CAAEE,EAAG,KACrCc,EAAA,KAAU,YAAe,IAAZI,EAAW,EAAXA,KACNF,EAAQE,SAAcA,EAA5B,KACMC,EAAWD,YAAjB,GACA,OACE,kBAAIX,IAAKW,EAAT,KAAoBpB,IAAKA,YAAI,CAAEsB,GAAF,EAASpB,EAAT,EAAeqB,GAAI,KAC9C,iBAAKL,MAAL,OAAkBG,SAAUA,IAC5B,oBACErB,IAAKA,YAAI,CACPwB,SADO,GAEPC,QAAS,kBAGVL,EARL,MAWE,YAAC,IAAD,GACErB,UADF,8BAEEC,IAAKA,YAAI,CACPuB,GADO,MAEPE,QAFO,SAGPnB,eAAgB,SAElBF,GAPF,IAQEC,GAAIe,EAAKM,MApBf,SA6BN,eAAQ7B,YAAaA,MCvCZ8B,GAFEC,UCAA,YAAyB,IAAtBb,EAAqB,EAArBA,SAAUc,EAAW,EAAXA,KAClBC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,YACd,OACE,YAAC,EAAD,CACEhB,SAAUA,EACVC,MAAOe,EAAYC,MACnBf,UAAWa,EAAKG,aAAaf,MAC7BrB,YAAaiC,EAAKG,aAAaC,UDLnB,c","file":"component---node-modules-gatsby-theme-blog-core-src-templates-posts-query-js-deaf5c079417173fcd18.js","sourcesContent":["import React, { Fragment } from \"react\"\r\nimport { Styled, css } from \"theme-ui\"\r\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\r\n\r\nconst Footer = ({ socialLinks }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          email\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const {\r\n    site: {\r\n      siteMetadata: { email },\r\n    },\r\n  } = data\r\n\r\n  return (\r\n    <footer className=\"site-footer h-card\">\r\n      <div className=\"wrapper\">\r\n        <div className=\"footer-col-wrapper\">\r\n          <div className=\"footer-col\">\r\n            <ul\r\n              className=\"contact-list\"\r\n              css={css({ listStyle: \"none\", p: 0, mt: 5 })}\r\n            >\r\n              <li className=\"p-name\">\r\n                <Styled.a\r\n                  className=\"black-link\"\r\n                  as={Link}\r\n                  to=\"notes/about\"\r\n                  css={css({ textDecoration: \"none\", fontSize: 20 })}\r\n                >\r\n                  About\r\n                </Styled.a>\r\n              </li>\r\n              <li>\r\n                <Styled.a\r\n                  className=\"black-link u-email\"\r\n                  href={\"mailto:\" + email}\r\n                  to=\"notes/about\"\r\n                >\r\n                  {email}\r\n                </Styled.a>\r\n                {` `}&bull;{` `}\r\n                {socialLinks.map((platform, i, arr) => (\r\n                  <Fragment key={platform.url}>\r\n                    <Styled.a\r\n                      href={platform.url}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                      css={css({ textDecoration: \"none\" })}\r\n                    >\r\n                      {platform.name}\r\n                    </Styled.a>\r\n                    {arr.length - 1 !== i && (\r\n                      <Fragment>\r\n                        {` `}&bull;{` `}\r\n                      </Fragment>\r\n                    )}\r\n                  </Fragment>\r\n                ))}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport { Styled, css } from \"theme-ui\"\r\n\r\nimport Layout from \"gatsby-theme-blog/src/components/layout\"\r\nimport SEO from \"gatsby-theme-blog/src/components/seo\"\r\nimport Footer from \"gatsby-theme-blog/src/components/home-footer\"\r\n\r\nconst Posts = ({ location, posts, siteTitle, socialLinks }) => (\r\n  <Layout location={location} title={siteTitle}>\r\n    <main css={css({flex: \"1 0 auto\"})}>\r\n      <ul className=\"post-list\" css={css({ p: 0 })}>\r\n        {posts.map(({ node }) => {\r\n          const title = node.title || node.slug\r\n          const keywords = node.keywords || []\r\n          return (\r\n            <li key={node.slug} css={css({ mb: 1, p: 0, ml: 0 })}>\r\n              <SEO title=\"Home\" keywords={keywords} />\r\n              <span\r\n                css={css({\r\n                  minWidth: 60,\r\n                  display: \"inline-block\",\r\n                })}\r\n              >\r\n                {node.date}\r\n              </span>\r\n\r\n              <Styled.a\r\n                className=\"black-link post-link-layout\"\r\n                css={css({\r\n                  ml: \"10%\",\r\n                  display: \"inline\",\r\n                  textDecoration: \"none\"\r\n                })}\r\n                as={Link}\r\n                to={node.slug}\r\n              >\r\n                {title}\r\n              </Styled.a>\r\n            </li>\r\n          )\r\n        })}\r\n      </ul>\r\n    </main>\r\n    <Footer socialLinks={socialLinks} />\r\n  </Layout>\r\n)\r\n\r\nexport default Posts\r\n","import { graphql } from \"gatsby\"\nimport PostsPage from \"../components/posts\"\n\nexport default PostsPage\n\nexport const query = graphql`\n  query PostsQuery {\n    site {\n      siteMetadata {\n        title\n        social {\n          name\n          url\n        }\n      }\n    }\n    allBlogPost(sort: { fields: [date, title], order: DESC }, limit: 1000) {\n      edges {\n        node {\n          id\n          excerpt\n          slug\n          title\n          date(formatString: \"MMMM DD, YYYY\")\n          tags\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport Posts from \"../../components/posts\"\n\nexport default ({ location, data }) => {\n  const { site, allBlogPost } = data\n  return (\n    <Posts\n      location={location}\n      posts={allBlogPost.edges}\n      siteTitle={site.siteMetadata.title}\n      socialLinks={site.siteMetadata.social}\n    />\n  )\n}\n"],"sourceRoot":""}